plugins {
    id 'com.android.application'
    id 'kotlin-android'
}

android {
    compileSdkVersion 33
    ndkVersion '23.1.7779620'

    defaultConfig {
        applicationId 'com.tananaev.passportreader'
        minSdkVersion 19
        targetSdkVersion 33
        versionCode 19
        versionName '3.0'
        multiDexEnabled = true
    }
    namespace 'com.tananaev.passportreader'

    flavorDimensions 'default'
    productFlavors {
        regular {
            isDefault = true
        }
        google
    }

    packagingOptions {
        resources {
            excludes += ['META-INF/LICENSE', 'META-INF/NOTICE']
        }
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation 'com.google.android.material:material:1.10.0'
    implementation 'androidx.core:core-ktx:1.12.0'
    implementation 'com.wdullaer:materialdatetimepicker:3.5.2'
    implementation 'org.jmrtd:jmrtd:0.7.18'
    implementation 'net.sf.scuba:scuba-sc-android:0.0.18'
    implementation 'com.madgag.spongycastle:prov:1.54.0.0'
    implementation 'com.gemalto.jp2:jp2-android:1.0.3'
    implementation 'com.github.mhshams:jnbis:1.1.0'
    implementation 'org.bouncycastle:bcpkix-jdk15on:1.65' // do not update
    implementation 'commons-io:commons-io:2.8.0'
    googleImplementation platform('com.google.firebase:firebase-bom:32.5.0')
    googleImplementation 'com.google.firebase:firebase-analytics-ktx'
    googleImplementation 'com.google.firebase:firebase-crashlytics'
    googleImplementation 'com.google.android.gms:play-services-ads:22.5.0'
    googleImplementation 'com.google.android.play:review-ktx:2.0.1'
}

if (getGradle().getStartParameter().getTaskRequests().toString().contains('Google')) {
    apply plugin: 'com.google.gms.google-services'
    apply plugin: 'com.google.firebase.crashlytics'

    task copyJson(type: Copy) {
        from '../../environment/firebase'
        into '.'
        include 'passport-reader.json'
        rename('passport-reader.json', 'google-services.json')
    }

    afterEvaluate {
        preBuild.dependsOn copyJson
    }
}
